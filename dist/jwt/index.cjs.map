{"version":3,"sources":["../../src/jwt/index.ts"],"sourcesContent":["import { ECDSA, HMAC, RSASSAPKCS1v1_5, RSASSAPSS } from \"../crypto/index.js\";\nimport { base64url } from \"../encoding/index.js\";\nimport { isWithinExpirationDate } from \"../index.js\";\n\nimport type { TimeSpan, TypedArray } from \"../index.js\";\n\nexport type JWTAlgorithm =\n\t| \"HS256\"\n\t| \"HS384\"\n\t| \"HS512\"\n\t| \"RS256\"\n\t| \"RS384\"\n\t| \"RS512\"\n\t| \"ES256\"\n\t| \"ES384\"\n\t| \"ES512\"\n\t| \"PS256\"\n\t| \"PS384\"\n\t| \"PS512\";\n\nexport async function createJWT(\n\talgorithm: JWTAlgorithm,\n\tkey: ArrayBuffer | TypedArray,\n\tpayloadClaims: Record<any, any>,\n\toptions?: {\n\t\theaders?: Record<any, any>;\n\t\texpiresIn?: TimeSpan;\n\t\tissuer?: string;\n\t\tsubject?: string;\n\t\taudiences?: string[];\n\t\tnotBefore?: Date;\n\t\tincludeIssuedTimestamp?: boolean;\n\t\tjwtId?: string;\n\t}\n): Promise<string> {\n\tconst header: JWTHeader = {\n\t\talg: algorithm,\n\t\ttyp: \"JWT\",\n\t\t...options?.headers\n\t};\n\tconst payload: JWTPayload = {\n\t\t...payloadClaims\n\t};\n\tif (options?.audiences !== undefined) {\n\t\tpayload.aud = options.audiences;\n\t}\n\tif (options?.subject !== undefined) {\n\t\tpayload.sub = options.subject;\n\t}\n\tif (options?.issuer !== undefined) {\n\t\tpayload.iss = options.issuer;\n\t}\n\tif (options?.jwtId !== undefined) {\n\t\tpayload.jti = options.jwtId;\n\t}\n\tif (options?.expiresIn !== undefined) {\n\t\tpayload.exp = Math.floor(Date.now() / 1000) + options.expiresIn.seconds();\n\t}\n\tif (options?.notBefore !== undefined) {\n\t\tpayload.nbf = Math.floor(options.notBefore.getTime() / 1000);\n\t}\n\tif (options?.includeIssuedTimestamp === true) {\n\t\tpayload.iat = Math.floor(Date.now() / 1000);\n\t}\n\tconst textEncoder = new TextEncoder();\n\tconst headerPart = base64url.encode(textEncoder.encode(JSON.stringify(header)), {\n\t\tincludePadding: false\n\t});\n\tconst payloadPart = base64url.encode(textEncoder.encode(JSON.stringify(payload)), {\n\t\tincludePadding: false\n\t});\n\tconst data = textEncoder.encode([headerPart, payloadPart].join(\".\"));\n\tconst signature = await getAlgorithm(algorithm).sign(key, data);\n\tconst signaturePart = base64url.encode(new Uint8Array(signature), {\n\t\tincludePadding: false\n\t});\n\tconst value = [headerPart, payloadPart, signaturePart].join(\".\");\n\treturn value;\n}\n\nexport async function validateJWT(\n\talgorithm: JWTAlgorithm,\n\tkey: ArrayBuffer | TypedArray,\n\tjwt: string\n): Promise<JWT> {\n\tconst parsedJWT = parseJWT(jwt);\n\tif (!parsedJWT) {\n\t\tthrow new Error(\"Invalid JWT\");\n\t}\n\tif (parsedJWT.algorithm !== algorithm) {\n\t\tthrow new Error(\"Invalid algorithm\");\n\t}\n\tif (parsedJWT.expiresAt && !isWithinExpirationDate(parsedJWT.expiresAt)) {\n\t\tthrow new Error(\"Expired JWT\");\n\t}\n\tif (parsedJWT.notBefore && Date.now() < parsedJWT.notBefore.getTime()) {\n\t\tthrow new Error(\"Inactive JWT\");\n\t}\n\tconst signature = base64url.decode(parsedJWT.parts[2], {\n\t\tstrict: false\n\t});\n\tconst data = new TextEncoder().encode(parsedJWT.parts[0] + \".\" + parsedJWT.parts[1]);\n\tconst validSignature = await getAlgorithm(parsedJWT.algorithm).verify(key, signature, data);\n\tif (!validSignature) {\n\t\tthrow new Error(\"Invalid signature\");\n\t}\n\treturn parsedJWT;\n}\n\nfunction getJWTParts(jwt: string): [header: string, payload: string, signature: string] | null {\n\tconst jwtParts = jwt.split(\".\");\n\tif (jwtParts.length !== 3) {\n\t\treturn null;\n\t}\n\treturn jwtParts as [string, string, string];\n}\n\nexport function parseJWT(jwt: string): JWT | null {\n\tconst jwtParts = getJWTParts(jwt);\n\tif (!jwtParts) {\n\t\treturn null;\n\t}\n\tconst textDecoder = new TextDecoder();\n\tconst rawHeader = base64url.decode(jwtParts[0], {\n\t\tstrict: false\n\t});\n\tconst rawPayload = base64url.decode(jwtParts[1], {\n\t\tstrict: false\n\t});\n\tconst header: unknown = JSON.parse(textDecoder.decode(rawHeader));\n\tif (typeof header !== \"object\" || header === null) {\n\t\treturn null;\n\t}\n\tif (!(\"alg\" in header) || !isValidAlgorithm(header.alg)) {\n\t\treturn null;\n\t}\n\tif (\"typ\" in header && header.typ !== \"JWT\") {\n\t\treturn null;\n\t}\n\tconst payload: unknown = JSON.parse(textDecoder.decode(rawPayload));\n\tif (typeof payload !== \"object\" || payload === null) {\n\t\treturn null;\n\t}\n\tconst properties: JWTProperties = {\n\t\talgorithm: header.alg,\n\t\texpiresAt: null,\n\t\tsubject: null,\n\t\tissuedAt: null,\n\t\tissuer: null,\n\t\tjwtId: null,\n\t\taudiences: null,\n\t\tnotBefore: null\n\t};\n\tif (\"exp\" in payload) {\n\t\tif (typeof payload.exp !== \"number\") {\n\t\t\treturn null;\n\t\t}\n\t\tproperties.expiresAt = new Date(payload.exp * 1000);\n\t}\n\tif (\"iss\" in payload) {\n\t\tif (typeof payload.iss !== \"string\") {\n\t\t\treturn null;\n\t\t}\n\t\tproperties.issuer = payload.iss;\n\t}\n\tif (\"sub\" in payload) {\n\t\tif (typeof payload.sub !== \"string\") {\n\t\t\treturn null;\n\t\t}\n\t\tproperties.subject = payload.sub;\n\t}\n\tif (\"aud\" in payload) {\n\t\tif (!Array.isArray(payload.aud)) {\n\t\t\tif (typeof payload.aud !== \"string\") {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tproperties.audiences = [payload.aud];\n\t\t} else {\n\t\t\tfor (const item of payload.aud) {\n\t\t\t\tif (typeof item !== \"string\") {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t}\n\t\t\tproperties.audiences = payload.aud;\n\t\t}\n\t}\n\tif (\"nbf\" in payload) {\n\t\tif (typeof payload.nbf !== \"number\") {\n\t\t\treturn null;\n\t\t}\n\t\tproperties.notBefore = new Date(payload.nbf * 1000);\n\t}\n\tif (\"iat\" in payload) {\n\t\tif (typeof payload.iat !== \"number\") {\n\t\t\treturn null;\n\t\t}\n\t\tproperties.issuedAt = new Date(payload.iat * 1000);\n\t}\n\tif (\"jti\" in payload) {\n\t\tif (typeof payload.jti !== \"string\") {\n\t\t\treturn null;\n\t\t}\n\t\tproperties.jwtId = payload.jti;\n\t}\n\treturn {\n\t\tvalue: jwt,\n\t\theader: {\n\t\t\t...header,\n\t\t\ttyp: \"JWT\",\n\t\t\talg: header.alg\n\t\t},\n\t\tpayload: {\n\t\t\t...payload\n\t\t},\n\t\tparts: jwtParts,\n\t\t...properties\n\t};\n}\n\ninterface JWTProperties {\n\talgorithm: JWTAlgorithm;\n\texpiresAt: Date | null;\n\tissuer: string | null;\n\tsubject: string | null;\n\taudiences: string[] | null;\n\tnotBefore: Date | null;\n\tissuedAt: Date | null;\n\tjwtId: string | null;\n}\n\nexport interface JWT extends JWTProperties {\n\tvalue: string;\n\theader: object;\n\tpayload: object;\n\tparts: [header: string, payload: string, signature: string];\n}\n\nfunction getAlgorithm(algorithm: JWTAlgorithm): ECDSA | HMAC | RSASSAPKCS1v1_5 | RSASSAPSS {\n\tif (algorithm === \"ES256\" || algorithm === \"ES384\" || algorithm === \"ES512\") {\n\t\treturn new ECDSA(ecdsaDictionary[algorithm].hash, ecdsaDictionary[algorithm].curve);\n\t}\n\tif (algorithm === \"HS256\" || algorithm === \"HS384\" || algorithm === \"HS512\") {\n\t\treturn new HMAC(hmacDictionary[algorithm]);\n\t}\n\tif (algorithm === \"RS256\" || algorithm === \"RS384\" || algorithm === \"RS512\") {\n\t\treturn new RSASSAPKCS1v1_5(rsassapkcs1v1_5Dictionary[algorithm]);\n\t}\n\tif (algorithm === \"PS256\" || algorithm === \"PS384\" || algorithm === \"PS512\") {\n\t\treturn new RSASSAPSS(rsassapssDictionary[algorithm]);\n\t}\n\tthrow new TypeError(\"Invalid algorithm\");\n}\n\nfunction isValidAlgorithm(maybeValidAlgorithm: unknown): maybeValidAlgorithm is JWTAlgorithm {\n\tif (typeof maybeValidAlgorithm !== \"string\") return false;\n\treturn [\n\t\t\"HS256\",\n\t\t\"HS384\",\n\t\t\"HS512\",\n\t\t\"RS256\",\n\t\t\"RS384\",\n\t\t\"RS512\",\n\t\t\"ES256\",\n\t\t\"ES384\",\n\t\t\"ES512\",\n\t\t\"PS256\",\n\t\t\"PS384\",\n\t\t\"PS512\"\n\t].includes(maybeValidAlgorithm);\n}\n\ninterface JWTHeader {\n\ttyp: \"JWT\";\n\talg: JWTAlgorithm;\n\t[header: string]: any;\n}\n\ninterface JWTPayload {\n\texp?: number;\n\tiss?: string;\n\taud?: string[] | string;\n\tjti?: string;\n\tnbf?: number;\n\tsub?: string;\n\tiat?: number;\n\t[claim: string]: any;\n}\n\nconst ecdsaDictionary = {\n\tES256: {\n\t\thash: \"SHA-256\",\n\t\tcurve: \"P-256\"\n\t},\n\tES384: {\n\t\thash: \"SHA-384\",\n\t\tcurve: \"P-384\"\n\t},\n\tES512: {\n\t\thash: \"SHA-512\",\n\t\tcurve: \"P-521\"\n\t}\n} as const;\n\nconst hmacDictionary = {\n\tHS256: \"SHA-256\",\n\tHS384: \"SHA-384\",\n\tHS512: \"SHA-512\"\n} as const;\n\nconst rsassapkcs1v1_5Dictionary = {\n\tRS256: \"SHA-256\",\n\tRS384: \"SHA-384\",\n\tRS512: \"SHA-512\"\n} as const;\n\nconst rsassapssDictionary = {\n\tPS256: \"SHA-256\",\n\tPS384: \"SHA-384\",\n\tPS512: \"SHA-512\"\n} as const;\n"],"mappings":"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","names":[]}