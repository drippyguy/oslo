{"version":3,"sources":["../../src/crypto/ecdsa.ts"],"sourcesContent":["import type { TypedArray } from \"../index.js\";\nimport type { KeyPair } from \"./index.js\";\nimport type { SHAHash } from \"./sha.js\";\n\nexport type ECDSACurve = \"P-256\" | \"P-384\" | \"P-521\";\n\nexport class ECDSA {\n\tprivate hash: SHAHash;\n\tprivate curve: ECDSACurve;\n\n\tconstructor(hash: SHAHash, curve: ECDSACurve) {\n\t\tthis.hash = hash;\n\t\tthis.curve = curve;\n\t}\n\n\tpublic async sign(\n\t\tprivateKey: ArrayBuffer | TypedArray,\n\t\tdata: ArrayBuffer | TypedArray\n\t): Promise<ArrayBuffer> {\n\t\tconst cryptoKey = await crypto.subtle.importKey(\n\t\t\t\"pkcs8\",\n\t\t\tprivateKey,\n\t\t\t{\n\t\t\t\tname: \"ECDSA\",\n\t\t\t\tnamedCurve: this.curve\n\t\t\t},\n\t\t\tfalse,\n\t\t\t[\"sign\"]\n\t\t);\n\t\tconst signature = await crypto.subtle.sign(\n\t\t\t{\n\t\t\t\tname: \"ECDSA\",\n\t\t\t\thash: this.hash\n\t\t\t},\n\t\t\tcryptoKey,\n\t\t\tdata\n\t\t);\n\t\treturn signature;\n\t}\n\n\tpublic async verify(\n\t\tpublicKey: ArrayBuffer | TypedArray,\n\t\tsignature: ArrayBuffer | TypedArray,\n\t\tdata: ArrayBuffer | TypedArray\n\t): Promise<boolean> {\n\t\tconst cryptoKey = await crypto.subtle.importKey(\n\t\t\t\"spki\",\n\t\t\tpublicKey,\n\t\t\t{\n\t\t\t\tname: \"ECDSA\",\n\t\t\t\tnamedCurve: this.curve\n\t\t\t},\n\t\t\tfalse,\n\t\t\t[\"verify\"]\n\t\t);\n\t\treturn await crypto.subtle.verify(\n\t\t\t{\n\t\t\t\tname: \"ECDSA\",\n\t\t\t\thash: this.hash\n\t\t\t},\n\t\t\tcryptoKey,\n\t\t\tsignature,\n\t\t\tdata\n\t\t);\n\t}\n\n\tpublic async generateKeyPair(): Promise<KeyPair> {\n\t\tconst cryptoKeyPair = await crypto.subtle.generateKey(\n\t\t\t{\n\t\t\t\tname: \"ECDSA\",\n\t\t\t\tnamedCurve: this.curve\n\t\t\t},\n\t\t\ttrue,\n\t\t\t[\"sign\"]\n\t\t);\n\t\tconst privateKey = await crypto.subtle.exportKey(\"pkcs8\", cryptoKeyPair.privateKey);\n\t\tconst publicKey = await crypto.subtle.exportKey(\"spki\", cryptoKeyPair.publicKey);\n\t\treturn {\n\t\t\tprivateKey,\n\t\t\tpublicKey\n\t\t};\n\t}\n}\n"],"mappings":"AAMO,MAAM,MAAM;AAAA,EACV;AAAA,EACA;AAAA,EAER,YAAY,MAAe,OAAmB;AAC7C,SAAK,OAAO;AACZ,SAAK,QAAQ;AAAA,EACd;AAAA,EAEA,MAAa,KACZ,YACA,MACuB;AACvB,UAAM,YAAY,MAAM,OAAO,OAAO;AAAA,MACrC;AAAA,MACA;AAAA,MACA;AAAA,QACC,MAAM;AAAA,QACN,YAAY,KAAK;AAAA,MAClB;AAAA,MACA;AAAA,MACA,CAAC,MAAM;AAAA,IACR;AACA,UAAM,YAAY,MAAM,OAAO,OAAO;AAAA,MACrC;AAAA,QACC,MAAM;AAAA,QACN,MAAM,KAAK;AAAA,MACZ;AAAA,MACA;AAAA,MACA;AAAA,IACD;AACA,WAAO;AAAA,EACR;AAAA,EAEA,MAAa,OACZ,WACA,WACA,MACmB;AACnB,UAAM,YAAY,MAAM,OAAO,OAAO;AAAA,MACrC;AAAA,MACA;AAAA,MACA;AAAA,QACC,MAAM;AAAA,QACN,YAAY,KAAK;AAAA,MAClB;AAAA,MACA;AAAA,MACA,CAAC,QAAQ;AAAA,IACV;AACA,WAAO,MAAM,OAAO,OAAO;AAAA,MAC1B;AAAA,QACC,MAAM;AAAA,QACN,MAAM,KAAK;AAAA,MACZ;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACD;AAAA,EACD;AAAA,EAEA,MAAa,kBAAoC;AAChD,UAAM,gBAAgB,MAAM,OAAO,OAAO;AAAA,MACzC;AAAA,QACC,MAAM;AAAA,QACN,YAAY,KAAK;AAAA,MAClB;AAAA,MACA;AAAA,MACA,CAAC,MAAM;AAAA,IACR;AACA,UAAM,aAAa,MAAM,OAAO,OAAO,UAAU,SAAS,cAAc,UAAU;AAClF,UAAM,YAAY,MAAM,OAAO,OAAO,UAAU,QAAQ,cAAc,SAAS;AAC/E,WAAO;AAAA,MACN;AAAA,MACA;AAAA,IACD;AAAA,EACD;AACD;","names":[]}