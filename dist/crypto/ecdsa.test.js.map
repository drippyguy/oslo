{"version":3,"sources":["../../src/crypto/ecdsa.test.ts"],"sourcesContent":["import { describe, test, expect } from \"vitest\";\nimport { ECDSA } from \"./index.js\";\n\nimport type { ECDSACurve } from \"./ecdsa.js\";\nimport type { SHAHash } from \"./sha.js\";\n\ninterface TestCase {\n\thash: SHAHash;\n\tcurve: ECDSACurve;\n}\n\nconst testCases: TestCase[] = [\n\t{\n\t\thash: \"SHA-1\",\n\t\tcurve: \"P-256\"\n\t},\n\t{\n\t\thash: \"SHA-256\",\n\t\tcurve: \"P-256\"\n\t},\n\t{\n\t\thash: \"SHA-384\",\n\t\tcurve: \"P-384\"\n\t},\n\t{\n\t\thash: \"SHA-512\",\n\t\tcurve: \"P-521\"\n\t}\n];\n\ndescribe.each(testCases)(\"ECDSA($hash, $curve)\", ({ hash, curve }) => {\n\ttest(\"Creates and verifies signature\", async () => {\n\t\tconst ecdsa = new ECDSA(hash, curve);\n\t\tconst data = new TextEncoder().encode(\"Hello world!\");\n\t\tconst { publicKey, privateKey } = await ecdsa.generateKeyPair();\n\t\tconst signature = await ecdsa.sign(privateKey, data);\n\t\tawait expect(ecdsa.verify(publicKey, signature, data)).resolves.toBe(true);\n\t});\n\ttest(\"Fails on invalid signature\", async () => {\n\t\tconst ecdsa = new ECDSA(hash, curve);\n\t\tconst data = new TextEncoder().encode(\"Hello world!\");\n\t\tconst keyPairA = await ecdsa.generateKeyPair();\n\t\tconst signature = await ecdsa.sign(keyPairA.privateKey, data);\n\t\tconst keyPairB = await ecdsa.generateKeyPair();\n\t\tawait expect(ecdsa.verify(keyPairB.publicKey, signature, data)).resolves.toBe(false);\n\t});\n});\n"],"mappings":"AAAA,SAAS,UAAU,MAAM,cAAc;AACvC,SAAS,aAAa;AAUtB,MAAM,YAAwB;AAAA,EAC7B;AAAA,IACC,MAAM;AAAA,IACN,OAAO;AAAA,EACR;AAAA,EACA;AAAA,IACC,MAAM;AAAA,IACN,OAAO;AAAA,EACR;AAAA,EACA;AAAA,IACC,MAAM;AAAA,IACN,OAAO;AAAA,EACR;AAAA,EACA;AAAA,IACC,MAAM;AAAA,IACN,OAAO;AAAA,EACR;AACD;AAEA,SAAS,KAAK,SAAS,EAAE,wBAAwB,CAAC,EAAE,MAAM,MAAM,MAAM;AACrE,OAAK,kCAAkC,YAAY;AAClD,UAAM,QAAQ,IAAI,MAAM,MAAM,KAAK;AACnC,UAAM,OAAO,IAAI,YAAY,EAAE,OAAO,cAAc;AACpD,UAAM,EAAE,WAAW,WAAW,IAAI,MAAM,MAAM,gBAAgB;AAC9D,UAAM,YAAY,MAAM,MAAM,KAAK,YAAY,IAAI;AACnD,UAAM,OAAO,MAAM,OAAO,WAAW,WAAW,IAAI,CAAC,EAAE,SAAS,KAAK,IAAI;AAAA,EAC1E,CAAC;AACD,OAAK,8BAA8B,YAAY;AAC9C,UAAM,QAAQ,IAAI,MAAM,MAAM,KAAK;AACnC,UAAM,OAAO,IAAI,YAAY,EAAE,OAAO,cAAc;AACpD,UAAM,WAAW,MAAM,MAAM,gBAAgB;AAC7C,UAAM,YAAY,MAAM,MAAM,KAAK,SAAS,YAAY,IAAI;AAC5D,UAAM,WAAW,MAAM,MAAM,gBAAgB;AAC7C,UAAM,OAAO,MAAM,OAAO,SAAS,WAAW,WAAW,IAAI,CAAC,EAAE,SAAS,KAAK,KAAK;AAAA,EACpF,CAAC;AACF,CAAC;","names":[]}