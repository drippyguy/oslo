{"version":3,"sources":["../../src/crypto/sha.test.ts"],"sourcesContent":["import { expect, test } from \"vitest\";\nimport { sha1, sha256, sha384, sha512 } from \"./sha.js\";\nimport { encodeHex } from \"../encoding/index.js\";\n\nconst data = new TextEncoder().encode(\"hello world\");\n\ntest(\"sha1()\", async () => {\n\tconst result = await sha1(data);\n\texpect(encodeHex(result)).toBe(\"2aae6c35c94fcfb415dbe95f408b9ce91ee846ed\");\n});\n\ntest(\"sha256()\", async () => {\n\tconst result = await sha256(data);\n\texpect(encodeHex(result)).toBe(\n\t\t\"b94d27b9934d3e08a52e52d7da7dabfac484efe37a5380ee9088f7ace2efcde9\"\n\t);\n});\n\ntest(\"sha384()\", async () => {\n\tconst result = await sha384(data);\n\texpect(encodeHex(result)).toBe(\n\t\t\"fdbd8e75a67f29f701a4e040385e2e23986303ea10239211af907fcbb83578b3e417cb71ce646efd0819dd8c088de1bd\"\n\t);\n});\n\ntest(\"sha512()\", async () => {\n\tconst result = await sha512(data);\n\texpect(encodeHex(result)).toBe(\n\t\t\"309ecc489c12d6eb4cc40f50c902f2b4d0ed77ee511a7c7a9bcd3ca86d4cd86f989dd35bc5ff499670da34255b45b0cfd830e81f605dcf7dc5542e93ae9cd76f\"\n\t);\n});\n"],"mappings":"AAAA,SAAS,QAAQ,YAAY;AAC7B,SAAS,MAAM,QAAQ,QAAQ,cAAc;AAC7C,SAAS,iBAAiB;AAE1B,MAAM,OAAO,IAAI,YAAY,EAAE,OAAO,aAAa;AAEnD,KAAK,UAAU,YAAY;AAC1B,QAAM,SAAS,MAAM,KAAK,IAAI;AAC9B,SAAO,UAAU,MAAM,CAAC,EAAE,KAAK,0CAA0C;AAC1E,CAAC;AAED,KAAK,YAAY,YAAY;AAC5B,QAAM,SAAS,MAAM,OAAO,IAAI;AAChC,SAAO,UAAU,MAAM,CAAC,EAAE;AAAA,IACzB;AAAA,EACD;AACD,CAAC;AAED,KAAK,YAAY,YAAY;AAC5B,QAAM,SAAS,MAAM,OAAO,IAAI;AAChC,SAAO,UAAU,MAAM,CAAC,EAAE;AAAA,IACzB;AAAA,EACD;AACD,CAAC;AAED,KAAK,YAAY,YAAY;AAC5B,QAAM,SAAS,MAAM,OAAO,IAAI;AAChC,SAAO,UAAU,MAAM,CAAC,EAAE;AAAA,IACzB;AAAA,EACD;AACD,CAAC;","names":[]}