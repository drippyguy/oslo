{"version":3,"sources":["../../src/password/argon2id.ts"],"sourcesContent":["import { hash, verify } from \"@node-rs/argon2\";\n\nimport type { PasswordHashingAlgorithm } from \"./index.js\";\nimport type { TypedArray } from \"../index.js\";\n\nconst v0x13 = 1;\n\nexport class Argon2id implements PasswordHashingAlgorithm {\n\tconstructor(options?: {\n\t\tmemorySize?: number;\n\t\titerations?: number;\n\t\ttagLength?: number;\n\t\tparallelism?: number;\n\t\tsecret?: ArrayBuffer | TypedArray;\n\t}) {\n\t\tthis.memorySize = options?.memorySize ?? 19456;\n\t\tthis.iterations = options?.iterations ?? 2;\n\t\tthis.tagLength = options?.tagLength ?? 32;\n\t\tthis.parallelism = options?.parallelism ?? 1;\n\t\tthis.secret = options?.secret ?? null;\n\t}\n\n\tprivate memorySize?: number;\n\tprivate iterations?: number;\n\tprivate tagLength?: number;\n\tprivate parallelism?: number;\n\tprivate secret: ArrayBuffer | TypedArray | null;\n\n\tpublic async hash(password: string): Promise<string> {\n\t\treturn await hash(password.normalize(\"NFKC\"), {\n\t\t\tmemoryCost: this.memorySize,\n\t\t\ttimeCost: this.iterations,\n\t\t\toutputLen: this.tagLength,\n\t\t\tparallelism: this.parallelism,\n\t\t\tversion: v0x13,\n\t\t\tsecret: this.secret ? Buffer.from(this.secret) : undefined\n\t\t});\n\t}\n\n\tpublic async verify(hash: string, password: string): Promise<boolean> {\n\t\treturn await verify(hash, password.normalize(\"NFKC\"), {\n\t\t\tmemoryCost: this.memorySize,\n\t\t\ttimeCost: this.iterations,\n\t\t\toutputLen: this.tagLength,\n\t\t\tparallelism: this.parallelism,\n\t\t\tversion: v0x13,\n\t\t\tsecret: this.secret ? Buffer.from(this.secret) : undefined\n\t\t});\n\t}\n}\n"],"mappings":"AAAA,SAAS,MAAM,cAAc;AAK7B,MAAM,QAAQ;AAEP,MAAM,SAA6C;AAAA,EACzD,YAAY,SAMT;AACF,SAAK,aAAa,SAAS,cAAc;AACzC,SAAK,aAAa,SAAS,cAAc;AACzC,SAAK,YAAY,SAAS,aAAa;AACvC,SAAK,cAAc,SAAS,eAAe;AAC3C,SAAK,SAAS,SAAS,UAAU;AAAA,EAClC;AAAA,EAEQ;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EAER,MAAa,KAAK,UAAmC;AACpD,WAAO,MAAM,KAAK,SAAS,UAAU,MAAM,GAAG;AAAA,MAC7C,YAAY,KAAK;AAAA,MACjB,UAAU,KAAK;AAAA,MACf,WAAW,KAAK;AAAA,MAChB,aAAa,KAAK;AAAA,MAClB,SAAS;AAAA,MACT,QAAQ,KAAK,SAAS,OAAO,KAAK,KAAK,MAAM,IAAI;AAAA,IAClD,CAAC;AAAA,EACF;AAAA,EAEA,MAAa,OAAOA,OAAc,UAAoC;AACrE,WAAO,MAAM,OAAOA,OAAM,SAAS,UAAU,MAAM,GAAG;AAAA,MACrD,YAAY,KAAK;AAAA,MACjB,UAAU,KAAK;AAAA,MACf,WAAW,KAAK;AAAA,MAChB,aAAa,KAAK;AAAA,MAClB,SAAS;AAAA,MACT,QAAQ,KAAK,SAAS,OAAO,KAAK,KAAK,MAAM,IAAI;AAAA,IAClD,CAAC;AAAA,EACF;AACD;","names":["hash"]}