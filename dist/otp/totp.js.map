{"version":3,"sources":["../../src/otp/totp.ts"],"sourcesContent":["import { TimeSpan } from \"../index.js\";\nimport { generateHOTP } from \"./hotp.js\";\n\nimport type { TypedArray } from \"../index.js\";\n\nexport class TOTPController {\n\tprivate digits: number;\n\tprivate period: TimeSpan;\n\n\tconstructor(options?: { digits?: number; period?: TimeSpan }) {\n\t\tthis.digits = options?.digits ?? 6;\n\t\tthis.period = options?.period ?? new TimeSpan(30, \"s\");\n\t}\n\n\tpublic async generate(secret: ArrayBuffer | TypedArray): Promise<string> {\n\t\tconst counter = Math.floor(Date.now() / this.period.milliseconds());\n\t\treturn await generateHOTP(secret, counter, this.digits);\n\t}\n\n\tpublic async verify(totp: string, secret: ArrayBuffer | TypedArray): Promise<boolean> {\n\t\tconst expectedTOTP = await this.generate(secret);\n\t\treturn totp === expectedTOTP;\n\t}\n}\n"],"mappings":"AAAA,SAAS,gBAAgB;AACzB,SAAS,oBAAoB;AAItB,MAAM,eAAe;AAAA,EACnB;AAAA,EACA;AAAA,EAER,YAAY,SAAkD;AAC7D,SAAK,SAAS,SAAS,UAAU;AACjC,SAAK,SAAS,SAAS,UAAU,IAAI,SAAS,IAAI,GAAG;AAAA,EACtD;AAAA,EAEA,MAAa,SAAS,QAAmD;AACxE,UAAM,UAAU,KAAK,MAAM,KAAK,IAAI,IAAI,KAAK,OAAO,aAAa,CAAC;AAClE,WAAO,MAAM,aAAa,QAAQ,SAAS,KAAK,MAAM;AAAA,EACvD;AAAA,EAEA,MAAa,OAAO,MAAc,QAAoD;AACrF,UAAM,eAAe,MAAM,KAAK,SAAS,MAAM;AAC/C,WAAO,SAAS;AAAA,EACjB;AACD;","names":[]}